name: Build and Deploy
on:
  push:
    branches:
      - test

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Install PDF prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y fonts-noto
          curl -L https://www.princexml.com/download/prince-14.2-linux-generic-x86_64.tar.gz | tar xz
          cd prince-14.2-linux-generic-x86_64
          sudo ./install.sh

      - name: Generate PDFs
        run: |
          yarn serve > /dev/null &
          sleep 3s
          mkdir -p build/pdf
          npx docusaurus-prince-pdf --include-index -u http://localhost:3000/docs/overview --output build/pdf/Casdoor_Docs.pdf
          npx docusaurus-prince-pdf --include-index -u http://localhost:3000/zh/docs/overview --output build/pdf/Casdoor_Docs_zh.pdf
          wget https://gist.githubusercontent.com/Selflocking/7a07d91d34ee227c93d2d8f583f981e3/raw/996a610b96e7e1f42e06ec555528f3427c2fb647/print.css -O print.css
          prince --no-warn-css --style=print.css build/pdf/Casdoor_Docs_zh.pdf
          rm print.css

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build
          retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          ssh-key: ${{ secrets.DEPLOY_KEY }}
          git-config-name: ${{ secrets.GH_NAME }}
          git-config-email: ${{ secrets.GH_EMAIL }}
          repository-name: casdoor/casdoor.github.io
          branch: master
          folder: build

  cleanup:
    needs: [build, deploy]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Delete artifact
        uses: geekyeggo/delete-artifact@v2
        with:
          name: build